class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
      vector<int> v(2,-1);
        v[0]=firstOccurrence(nums,target);
        v[1]=lastOccurrence(nums,target);
        return v;
    }
     int firstOccurrence(vector<int>& nums, int target){
        int s = 0;
        int e = nums.size()-1;
        int mid=0,ans=-1;
        while(s<=e){
             mid  = s + (e-s)/2;
            //cout<<nums[mid]<<"   ";
            if(nums[mid]==target){
                ans=mid;
                e=mid-1;
            }
            else if(nums[mid]>target){
                e = mid -1;
            }
            else{
                s = mid+1;
            }
        }
        return ans;
    }
    int lastOccurrence(vector<int>& nums, int target){
        int s = 0;
        int e = nums.size()-1;
        int mid=0,ans=-1;
        while(s<=e){
             mid  = s + (e-s)/2;
            if(nums[mid]==target){
                ans=mid;
                s=mid+1;
            }
            else if(nums[mid]>target){
                e = mid -1;
            }
            else{
                s = mid+1;
            }
        }
        return ans;
    }
};
    
